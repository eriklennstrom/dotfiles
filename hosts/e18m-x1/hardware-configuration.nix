# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  ### GPU
  hardware.opengl = {
    enable = true;
    extraPackages = with pkgs; [
      # vpl-gpu-rt
      onevpl-intel-gpu
      intel-media-driver
      libvdpau-va-gl
    ];
    # driSupport = true;
  };
  environment.sessionVariables = { LIBVA_DRIVER_NAME = "iHD"; };

  ### Fingerprint
  services.fprintd = {
    enable = true;
    # tod = {
    #   enable = true;
    #   driver = pkgs.libfprint-2-tod1-vfs0090;
    # };
  };

  ### Webcam
  # hardware.ipu6 = {
  #   enable = true;
  #   platform = "ipu6";
  # };
  #

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  # boot.kernelModules = [ "kvm-intel" ];
  # boot.kernelParams = [ "i915.force_probe=<7d55>" ];
  # boot.extraModulePackages = [ ];
  #   nixpkgs.config.packageOverrides = pkgs: {
  #   intel-vaapi-driver = pkgs.intel-vaapi-driver.override { enableHybridCodec = true; };
  # };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/85bf04fa-f290-49fb-bfe3-c0aa1e1e9258";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-c7d63d86-2ee1-44b4-8e33-0d6d8924b90b".device = "/dev/disk/by-uuid/c7d63d86-2ee1-44b4-8e33-0d6d8924b90b";
  
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/ACBC-C464";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/c1c1de62-8d23-4a2a-af4b-0e0a3789500f"; }
    ];
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
